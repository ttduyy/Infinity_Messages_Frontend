/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';
import { CommentDto } from 'app/services/models/comment-dto';


export interface GetCommentsTree$Params {
  messageId: string;
}
export interface GetCommentsTreeResponse {
  data: CommentDto[];
  status: number;
  message: string;
  error: string;
  success: boolean;
} 

export function getCommentsTree(http: HttpClient, rootUrl: string, params: GetCommentsTree$Params, context?: HttpContext): Observable<StrictHttpResponse<GetCommentsTreeResponse>> {
  const rb = new RequestBuilder(rootUrl, '/api/comment/' + params.messageId + '/load_comment', 'get');
  if (params) {
    // rb.path('messageId', params.messageId, {});
    console.log(rb);
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<GetCommentsTreeResponse>;
    })
  );
}

getCommentsTree.PATH = '/api/comment/{messageId}/load_comment';
